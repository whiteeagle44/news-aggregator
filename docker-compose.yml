version: '2'
services:
  newsproducer:
    build:
      context: newsproducer
    image: newsproducer:0.0.1-SNAPSHOT
    environment:
      NEWSDATAIO_TOKEN: ${NEWSDATAIO_TOKEN}
    ports:
      - "8080:8080"
      - "5000:5000"

  newsconsumer:
    build:
      context: newsconsumer
    image: newsconsumer:0.0.1-SNAPSHOT
    ports:
      - "8081:8081"
      - "5001:5001"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  database:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - database:/var/lib/postgresql/data

volumes:
  database:
    driver: local